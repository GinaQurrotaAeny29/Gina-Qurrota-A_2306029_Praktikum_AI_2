# -*- coding: utf-8 -*-
"""GreedySearch.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_jRzVfr-lfdl2kGfeUhzo447-r874pxv

**Greedy search**
"""

from queue import PriorityQueue

def reconstruct_path(came_from, start, goal):
    current = goal
    path = []

    while current != start:
        path.append(current)
        current = came_from[current]

    path.append(start)
    path.reverse()
    return path

def greedy_search(graph, start, goal):
    frontier = PriorityQueue()
    frontier.put((heuristic[start], start))
    came_from = {}
    explored = set()

    while not frontier.empty():
        _, current_node = frontier.get()

        if current_node == goal:
            print("Simpul tujuan ditemukan!")
            path = reconstruct_path(came_from, start, goal)
            print("Jalur terpendek:", path)
            return path

        explored.add(current_node)

        for neighbor in graph[current_node]:
            if neighbor not in explored and neighbor not in came_from:
                frontier.put((heuristic[neighbor], neighbor))
                came_from[neighbor] = current_node

    print("Simpul tujuan tidak ditemukan!")
    return None

heuristic = {
    'A': 4,
    'B': 3,
    'C': 3,
    'D': 1,
    'S': 6,
    'G': 0
}

graph = {
    'S': ['A', 'B'],
    'A': ['B', 'D'],
    'B': ['D', 'C'],
    'C': ['D', 'G'],
    'D': ['G'],
}

start_node = 'S'
goal_node = 'G'

greedy_search(graph, start_node, goal_node)